{"name":"Rust-fmod","tagline":"A rust binding for fmod","body":"rust-fmod\r\n=========\r\n\r\nThis is a rust binding for FMOD, developped by FIRELIGHT TECHNOLOGIES.\r\n\r\nFMOD website : www.fmod.org\r\n\r\n\r\n##Installation\r\n\r\nYou must install on your computer the FMOD library which is used for the binding.\r\n\r\nTo build it, please use :\r\n\r\n```Shell\r\n> make\r\n```\r\n\r\nThis command build rfmod, the examples, and the documentation.\r\n\r\nYou can build them separatly too.\r\n\r\n```Shell\r\n> make rfmod\r\n> make examples\r\n> make docs\r\n```\r\n\r\n##Short example\r\n\r\nHere is a short example on how to create a file and to play it :\r\n\r\n```Rust\r\n#![feature(globs)]\r\n\r\nextern crate libc;\r\nextern crate rfmod;\r\n\r\nuse rfmod::enums::*;\r\nuse rfmod::*;\r\nuse std::os;\r\n\r\nfn main() {\r\n    let fmod = match FmodSys::new() {\r\n        Ok(f) => f,\r\n        Err(e) => {\r\n       \t    fail!(\"Error code : {}\", e);\r\n        }\r\n    };\r\n\r\n    match fmod.init() {\r\n        fmod::Ok => {}\r\n        e => {\r\n            fmod.release();\r\n            fail!(\"FmodSys.init failed : {}\", e);\r\n        }\r\n    };\r\n\r\n    let mut sound = match fmod.create_sound(StrBuf::from_str(\"music.mp3\"), None, None) {\r\n\t\t              Ok(s) => s,\r\n\t\t              Err(err) => {fail!(\"Error code : {}\", err);},\r\n\t\t            };\r\n\r\n    match sound.play_to_the_end() {\r\n        fmod::Ok => {println!(\"Ok !\");}\r\n        err => {fail!(\"Error code : {}\", err);}\r\n    };\r\n}\r\n```\r\n\r\nFor a more complete example : https://github.com/GuillaumeGomez/rust-music-player\r\n\r\n##License\r\n\r\n    Copyright (c) 2014 Guillaume Gomez\r\n    \r\n    The license of this project is the same of the FMOD non-commercial use. \r\n    Please refer to it. Here is the website for FMOD : http://www.fmod.org/\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}